
/var/www/projects/Project-ITS/env
/var/www/projects/Project-ITS/Project-ITS

sudo apt update
sudo apt install nginx
sudo systemctl enable nginx
sudo systemctl start nginx
sudo systemctl status nginx
systemctl daemon-reload

sudo nginx -t
sudo systemctl restart nginx
apt install python3-virtualenv
apt install redis-server

git clone https://github.com/Ginza777/Project-ITS.git


sudo apt update
sudo apt install python3-venv python3-dev libpq-dev postgresql postgresql-contrib nginx curl

sudo -u postgres psql

CREATE DATABASE itsdb;
CREATE USER postgres WITH PASSWORD 'postgres';
ALTER USER postgres WITH PASSWORD  'postgres';
ALTER ROLE postgres SET client_encoding TO 'utf8';
ALTER ROLE postgres SET default_transaction_isolation TO 'read committed';
ALTER ROLE postgres SET timezone TO 'UTC';
GRANT CREATE ON SCHEMA public TO postgres;

GRANT ALL PRIVILEGES ON DATABASE djangofather TO postgres;
\q


pip install -r requirements
mkdir staticfiles
python manage.py collectstatic
pip install --upgrade setuptools
python manage.py migrate
python manage.py createsuperuser

sudo nano /etc/systemd/system/its.socket

[Unit]
Description=gunicorn socket

[Socket]
ListenStream=/run/its.sock

[Install]
WantedBy=sockets.target


sudo nano /etc/systemd/system/its.service


[Unit]
Description=gunicorn daemon
Requires=its.socket
After=network.target

[Service]
User=root
Group=www-data
WorkingDirectory=/var/www/projects/Project-ITS/Project-ITS
ExecStart=/var/www/projects/Project-ITS/env/bin/gunicorn \
          --access-logfile - \
          --workers 8 \
          --bind unix:/run/its.sock \
          core.wsgi:application

[Install]
WantedBy=multi-user.target


sudo systemctl start its.socket
sudo systemctl enable its.socket
sudo systemctl status its.socket

file /run/its.sock
sudo journalctl -u its.socket
curl --unix-socket /run/its.sock localhost
sudo journalctl -u djangofather

sudo systemctl daemon-reload
sudo systemctl restart its
sudo systemctl status its






openssl genpkey -algorithm RSA -out /etc/letsencrypt/live/crm.sherzamon.cloud/privkey.pem -pkeyopt rsa_keygen_bits:2048
openssl genpkey -algorithm RSA -out /etc/letsencrypt/live/crm.sherzamon.cloud/fullchain.pem -pkeyopt rsa_keygen_bits:2048


sudo nano /etc/nginx/sites-available/felix.sherzamon.cloud



server {
    listen 80;
    server_name felix.sherzamon.cloud;



    location = /favicon.ico { access_log off; log_not_found off; }
    location /static/ {
        root /var/www/projects/Project-ITS/Project-ITS;
    }

    location / {
        include proxy_params;
        proxy_pass http://unix:/run/its.sock;
    }
}



sudo ln -s /etc/nginx/sites-available/felix.sherzamon.cloud /etc/nginx/sites-enabled
sudo nginx -t
sudo systemctl restart nginx
journalctl -xeu nginx.service





#certbot

sudo apt install certbot python3-certbot-nginx
sudo certbot --nginx -d felix.sherzamon.cloud
sudo systemctl status certbot.timer
sudo certbot renew --dry-run



